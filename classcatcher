#!/usr/bin/python

# # #
# Brian Hession, Erik Wenkel, James Miller
#
# Testing login functions with python
#
# Class "HokieLogger" logs into hokiespa and retrieves
# course information
#
# April 18, 2012
# Split main and HokieLogger class module.
#
#

from optparse import OptionParser
from sys import path,argv,exit
path.append('include')
from hokielogger import HokieLogger


# # #
# Login()
#
# Logs in to hokiespa
#
#
def login( username, password ):
	"""Logs in to HokieSpa"""

	user = HokieLogger();
	check = user.hokiespalogin( username, password );
	if check:
		user.savecookie()
		print "Login Successful"
	else:
		print "Login Failed"


# # #
# checkclass()
#
# Checks class
#
# Precondition: Must have successfully logged in and
# 					 saved cookie
#
#
def checkclass( crn, term, year, subj, crse ):
	"""Checks class"""

	user = HokieLogger();
	check = user.loadcookie()
	if check:
		seats = user.lookupclass( crn, term, year, subj, crse )
		print seats
	else:
		print "Cannot load cookies"


# Main
if __name__ == "__main__":

	parser = OptionParser(usage="usage: %prog [-l|-c] args")
	parser.disable_interspersed_args()
	parser.add_option("-l",action="store",metavar="ARGS",
							dest='log_args',nargs=2,type="string",
							help="Login - args: <username> <password>")
	parser.add_option("-c",action="store",metavar="ARGS",
							dest='check_args',nargs=5,type="string",
							help="Check Class - args: <crn> <term> <year> "
								  "<subj> <crse>")
	(options,args) = parser.parse_args()

	# Take no arguments
	if len(args) > 0:
		print "Unknown argument",args[0]
		exit(1)

	# Must have either [-l] or [-c]
	if not options.log_args and not options.check_args:
		parser.print_help()
		exit(0)

	# If logging in
	if options.log_args:
		login( options.log_args[0], options.log_args[1] )

	# If checking class
	if options.check_args:
		checkclass( 
			options.check_args[0],
			options.check_args[1],
			options.check_args[2],
			options.check_args[3],
			options.check_args[4]
		)

